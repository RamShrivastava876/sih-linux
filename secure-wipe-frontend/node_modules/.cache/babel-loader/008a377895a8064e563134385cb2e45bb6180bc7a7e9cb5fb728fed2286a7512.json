{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\Desktop\\\\sih 2025\\\\secure-wipe-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [consent, setConsent] = useState(false);\n  const [devices, setDevices] = useState([]);\n  const [selectedDevice, setSelectedDevice] = useState('');\n  const [method, setMethod] = useState('auto');\n  const [progress, setProgress] = useState([]);\n  const [erasing, setErasing] = useState(false);\n  const [certificate, setCertificate] = useState(null);\n  const [checklist, setChecklist] = useState({\n    adb: false,\n    connected: false,\n    encrypted: false\n  });\n  const [androidEncryption, setAndroidEncryption] = useState(null);\n  const [winBitLocker, setWinBitLocker] = useState({\n    status: null,\n    unlocking: false\n  });\n  const wsRef = useRef(null);\n  const fetchDevices = async () => {\n    const res = await axios.get('http://localhost:8000/devices');\n    setDevices(res.data);\n  };\n  const startErase = async () => {\n    setErasing(true);\n    setProgress([`Started erasing ${selectedDevice} with ${method}`]);\n    // Start WebSocket for logs\n    wsRef.current = new window.WebSocket(`ws://localhost:8000/logs/${encodeURIComponent(selectedDevice)}`);\n    wsRef.current.onmessage = event => {\n      setProgress(p => [...p, event.data]);\n      if (event.data.includes('Certificate generated.')) {\n        wsRef.current.close();\n        setErasing(false);\n        fetchCertificate();\n      }\n    };\n    wsRef.current.onerror = () => {\n      setProgress(p => [...p, 'WebSocket error.']);\n    };\n    await axios.post('http://localhost:8000/erase', {\n      device_id: selectedDevice,\n      method\n    });\n  };\n  const fetchCertificate = async () => {\n    // Fetch JSON for display\n    const res = await axios.get('http://localhost:8000/certificate', {\n      params: {\n        device_id: selectedDevice,\n        format: 'json'\n      }\n    });\n    setCertificate(res.data);\n  };\n  const downloadCert = format => {\n    const url = `http://localhost:8000/certificate?device_id=${encodeURIComponent(selectedDevice)}&format=${format}`;\n    window.open(url, '_blank');\n  };\n  if (!consent) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 40\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"This process will permanently erase selected drives. Proceed?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setConsent(true);\n          fetchDevices();\n        },\n        children: \"I Understand, Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n  if (certificate) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 40\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Erase Complete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(certificate, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => downloadCert('pdf'),\n        children: \"Download PDF Certificate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => downloadCert('json'),\n        children: \"Download JSON Certificate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        children: \"Start Over\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Checklist for Android devices\n  const isAndroid = devices.find(d => d.id === selectedDevice && d.type.startsWith('Android'));\n  const isWindowsDrive = devices.find(d => d.id === selectedDevice && (d.type === 'SSD' || d.type === 'HDD'));\n\n  // Auto-detect Android encryption status (via backend API)\n  useEffect(() => {\n    if (isAndroid) {\n      const serial = selectedDevice.split(':')[1];\n      fetch(`http://localhost:8000/android_encryption?serial=${serial}`).then(res => res.json()).then(data => setAndroidEncryption(data.encrypted ? 'Encrypted' : 'Not Encrypted')).catch(() => setAndroidEncryption(null));\n    } else {\n      setAndroidEncryption(null);\n    }\n  }, [selectedDevice, isAndroid]);\n\n  // Auto-detect Windows BitLocker status (via backend API)\n  useEffect(() => {\n    if (isWindowsDrive) {\n      fetch(`http://localhost:8000/bitlocker_status?device_id=${encodeURIComponent(selectedDevice)}`).then(res => res.json()).then(data => setWinBitLocker({\n        status: data.status,\n        unlocking: false\n      })).catch(() => setWinBitLocker({\n        status: null,\n        unlocking: false\n      }));\n    } else {\n      setWinBitLocker({\n        status: null,\n        unlocking: false\n      });\n    }\n  }, [selectedDevice, isWindowsDrive]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 40\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Select Device to Erase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedDevice,\n      onChange: e => setSelectedDevice(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"-- Select --\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), devices.map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: d.id,\n        children: [d.model, \" [\", d.type, \"] (\", d.size, \")\"]\n      }, d.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), isAndroid && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '20px 0',\n        padding: '10px',\n        border: '1px solid #ccc',\n        borderRadius: 8,\n        background: '#f9f9f9'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Android Device Checklist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: checklist.adb,\n          onChange: e => setChecklist(c => ({\n            ...c,\n            adb: e.target.checked\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), \"Enable USB Debugging (ADB) on device\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: checklist.connected,\n          onChange: e => setChecklist(c => ({\n            ...c,\n            connected: e.target.checked\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), \"Device is connected and authorized (shows in 'adb devices')\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: checklist.encrypted,\n          onChange: e => setChecklist(c => ({\n            ...c,\n            encrypted: e.target.checked\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), \"Device storage is encrypted (recommended for secure erase)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: '#888',\n          fontSize: 13,\n          marginTop: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Note:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), \" Factory reset is only non-recoverable if device is encrypted.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 87\n        }, this), \"Encryption status: \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: androidEncryption === null ? 'Detecting...' : androidEncryption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 104\n        }, this), \"You can check encryption status in device settings.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 64\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this), isWindowsDrive && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '20px 0',\n        padding: '10px',\n        border: '1px solid #ccc',\n        borderRadius: 8,\n        background: '#f9f9f9'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Windows Drive Checklist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"BitLocker status: \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: winBitLocker.status === null ? 'Detecting...' : winBitLocker.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 31\n        }, this), winBitLocker.status === 'Locked' && /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            marginLeft: 10\n          },\n          disabled: winBitLocker.unlocking,\n          onClick: () => {\n            setWinBitLocker(w => ({\n              ...w,\n              unlocking: true\n            }));\n            fetch(`http://localhost:8000/bitlocker_unlock?device_id=${encodeURIComponent(selectedDevice)}`, {\n              method: 'POST'\n            }).then(() => setWinBitLocker(w => ({\n              ...w,\n              unlocking: false,\n              status: 'Unlocked'\n            }))).catch(() => setWinBitLocker(w => ({\n              ...w,\n              unlocking: false\n            })));\n          },\n          children: \"Unlock BitLocker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: '#888',\n          fontSize: 13,\n          marginTop: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Note:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), \" Secure erase is only possible if BitLocker is unlocked.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 81\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Erase Method\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: method,\n      onChange: e => setMethod(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"auto\",\n        children: \"Auto Secure Erase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"multi-pass\",\n        children: \"Multi-pass overwrite\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"crypto-erase\",\n        children: \"Crypto-erase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: !selectedDevice || erasing || isAndroid && !(checklist.adb && checklist.connected && checklist.encrypted),\n      onClick: startErase,\n      children: \"Erase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 30\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: progress.join('\\n')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"s/U0O9NsrEQkHnwsRMYgIA20/EQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","jsxDEV","_jsxDEV","App","_s","consent","setConsent","devices","setDevices","selectedDevice","setSelectedDevice","method","setMethod","progress","setProgress","erasing","setErasing","certificate","setCertificate","checklist","setChecklist","adb","connected","encrypted","androidEncryption","setAndroidEncryption","winBitLocker","setWinBitLocker","status","unlocking","wsRef","fetchDevices","res","get","data","startErase","current","window","WebSocket","encodeURIComponent","onmessage","event","p","includes","close","fetchCertificate","onerror","post","device_id","params","format","downloadCert","url","open","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","JSON","stringify","location","reload","isAndroid","find","d","id","type","startsWith","isWindowsDrive","serial","split","fetch","then","json","catch","value","onChange","e","target","map","model","size","margin","border","borderRadius","background","checked","c","color","fontSize","marginTop","marginLeft","disabled","w","join","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/OneDrive/Desktop/sih 2025/secure-wipe-frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction App() {\r\n  const [consent, setConsent] = useState(false);\r\n  const [devices, setDevices] = useState([]);\r\n  const [selectedDevice, setSelectedDevice] = useState('');\r\n  const [method, setMethod] = useState('auto');\r\n  const [progress, setProgress] = useState([]);\r\n  const [erasing, setErasing] = useState(false);\r\n  const [certificate, setCertificate] = useState(null);\r\n  const [checklist, setChecklist] = useState({ adb: false, connected: false, encrypted: false });\r\n  const [androidEncryption, setAndroidEncryption] = useState(null);\r\n  const [winBitLocker, setWinBitLocker] = useState({ status: null, unlocking: false });\r\n  const wsRef = useRef(null);\r\n\r\n  const fetchDevices = async () => {\r\n    const res = await axios.get('http://localhost:8000/devices');\r\n    setDevices(res.data);\r\n  };\r\n\r\n  const startErase = async () => {\r\n    setErasing(true);\r\n    setProgress([`Started erasing ${selectedDevice} with ${method}`]);\r\n    // Start WebSocket for logs\r\n    wsRef.current = new window.WebSocket(`ws://localhost:8000/logs/${encodeURIComponent(selectedDevice)}`);\r\n    wsRef.current.onmessage = (event) => {\r\n      setProgress((p) => [...p, event.data]);\r\n      if (event.data.includes('Certificate generated.')) {\r\n        wsRef.current.close();\r\n        setErasing(false);\r\n        fetchCertificate();\r\n      }\r\n    };\r\n    wsRef.current.onerror = () => {\r\n      setProgress((p) => [...p, 'WebSocket error.']);\r\n    };\r\n    await axios.post('http://localhost:8000/erase', {\r\n      device_id: selectedDevice,\r\n      method,\r\n    });\r\n  };\r\n\r\n  const fetchCertificate = async () => {\r\n    // Fetch JSON for display\r\n    const res = await axios.get('http://localhost:8000/certificate', {\r\n      params: { device_id: selectedDevice, format: 'json' },\r\n    });\r\n    setCertificate(res.data);\r\n  };\r\n\r\n  const downloadCert = (format) => {\r\n    const url = `http://localhost:8000/certificate?device_id=${encodeURIComponent(selectedDevice)}&format=${format}`;\r\n    window.open(url, '_blank');\r\n  };\r\n\r\n  if (!consent) {\r\n    return (\r\n      <div style={{ padding: 40 }}>\r\n        <h2>This process will permanently erase selected drives. Proceed?</h2>\r\n        <button onClick={() => { setConsent(true); fetchDevices(); }}>I Understand, Continue</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (certificate) {\r\n    return (\r\n      <div style={{ padding: 40 }}>\r\n        <h2>Erase Complete</h2>\r\n        <pre>{JSON.stringify(certificate, null, 2)}</pre>\r\n        <button onClick={() => downloadCert('pdf')}>Download PDF Certificate</button>\r\n        <button onClick={() => downloadCert('json')}>Download JSON Certificate</button>\r\n        <br />\r\n        <button onClick={() => window.location.reload()}>Start Over</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Checklist for Android devices\r\n  const isAndroid = devices.find(d => d.id === selectedDevice && d.type.startsWith('Android'));\r\n  const isWindowsDrive = devices.find(d => d.id === selectedDevice && (d.type === 'SSD' || d.type === 'HDD'));\r\n\r\n  // Auto-detect Android encryption status (via backend API)\r\n  useEffect(() => {\r\n    if (isAndroid) {\r\n      const serial = selectedDevice.split(':')[1];\r\n      fetch(`http://localhost:8000/android_encryption?serial=${serial}`)\r\n        .then(res => res.json())\r\n        .then(data => setAndroidEncryption(data.encrypted ? 'Encrypted' : 'Not Encrypted'))\r\n        .catch(() => setAndroidEncryption(null));\r\n    } else {\r\n      setAndroidEncryption(null);\r\n    }\r\n  }, [selectedDevice, isAndroid]);\r\n\r\n  // Auto-detect Windows BitLocker status (via backend API)\r\n  useEffect(() => {\r\n    if (isWindowsDrive) {\r\n      fetch(`http://localhost:8000/bitlocker_status?device_id=${encodeURIComponent(selectedDevice)}`)\r\n        .then(res => res.json())\r\n        .then(data => setWinBitLocker({ status: data.status, unlocking: false }))\r\n        .catch(() => setWinBitLocker({ status: null, unlocking: false }));\r\n    } else {\r\n      setWinBitLocker({ status: null, unlocking: false });\r\n    }\r\n  }, [selectedDevice, isWindowsDrive]);\r\n\r\n  return (\r\n    <div style={{ padding: 40 }}>\r\n      <h2>Select Device to Erase</h2>\r\n      <select value={selectedDevice} onChange={e => setSelectedDevice(e.target.value)}>\r\n        <option value=\"\">-- Select --</option>\r\n        {devices.map(d => (\r\n          <option key={d.id} value={d.id}>\r\n            {d.model} [{d.type}] ({d.size})\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      {isAndroid && (\r\n        <div style={{ margin: '20px 0', padding: '10px', border: '1px solid #ccc', borderRadius: 8, background: '#f9f9f9' }}>\r\n          <h3>Android Device Checklist</h3>\r\n          <label>\r\n            <input type=\"checkbox\" checked={checklist.adb} onChange={e => setChecklist(c => ({ ...c, adb: e.target.checked }))} />\r\n            Enable USB Debugging (ADB) on device\r\n          </label><br />\r\n          <label>\r\n            <input type=\"checkbox\" checked={checklist.connected} onChange={e => setChecklist(c => ({ ...c, connected: e.target.checked }))} />\r\n            Device is connected and authorized (shows in 'adb devices')\r\n          </label><br />\r\n          <label>\r\n            <input type=\"checkbox\" checked={checklist.encrypted} onChange={e => setChecklist(c => ({ ...c, encrypted: e.target.checked }))} />\r\n            Device storage is encrypted (recommended for secure erase)\r\n          </label>\r\n          <div style={{ color: '#888', fontSize: 13, marginTop: 8 }}>\r\n            <b>Note:</b> Factory reset is only non-recoverable if device is encrypted.<br />\r\n            Encryption status: <b>{androidEncryption === null ? 'Detecting...' : androidEncryption}</b><br />\r\n            You can check encryption status in device settings.<br />\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {isWindowsDrive && (\r\n        <div style={{ margin: '20px 0', padding: '10px', border: '1px solid #ccc', borderRadius: 8, background: '#f9f9f9' }}>\r\n          <h3>Windows Drive Checklist</h3>\r\n          <div>\r\n            BitLocker status: <b>{winBitLocker.status === null ? 'Detecting...' : winBitLocker.status}</b>\r\n            {winBitLocker.status === 'Locked' && (\r\n              <button\r\n                style={{ marginLeft: 10 }}\r\n                disabled={winBitLocker.unlocking}\r\n                onClick={() => {\r\n                  setWinBitLocker(w => ({ ...w, unlocking: true }));\r\n                  fetch(`http://localhost:8000/bitlocker_unlock?device_id=${encodeURIComponent(selectedDevice)}`, { method: 'POST' })\r\n                    .then(() => setWinBitLocker(w => ({ ...w, unlocking: false, status: 'Unlocked' })))\r\n                    .catch(() => setWinBitLocker(w => ({ ...w, unlocking: false })));\r\n                }}\r\n              >Unlock BitLocker</button>\r\n            )}\r\n          </div>\r\n          <div style={{ color: '#888', fontSize: 13, marginTop: 8 }}>\r\n            <b>Note:</b> Secure erase is only possible if BitLocker is unlocked.<br />\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <h3>Erase Method</h3>\r\n      <select value={method} onChange={e => setMethod(e.target.value)}>\r\n        <option value=\"auto\">Auto Secure Erase</option>\r\n        <option value=\"multi-pass\">Multi-pass overwrite</option>\r\n        <option value=\"crypto-erase\">Crypto-erase</option>\r\n      </select>\r\n      <br /><br />\r\n      <button\r\n        disabled={!selectedDevice || erasing || (isAndroid && !(checklist.adb && checklist.connected && checklist.encrypted))}\r\n        onClick={startErase}\r\n      >Erase</button>\r\n      <div style={{ marginTop: 30 }}>\r\n        <h4>Progress</h4>\r\n        <pre>{progress.join('\\n')}</pre>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}