{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\Desktop\\\\sih 2025\\\\secure-wipe-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [unlockModal, setUnlockModal] = useState({\n    open: false,\n    drive: '',\n    method: 'password',\n    value: ''\n  });\n  const [consent, setConsent] = useState(false);\n  const [devices, setDevices] = useState([]);\n  const [selectedDevice, setSelectedDevice] = useState('');\n  const [method, setMethod] = useState('auto');\n  const [progress, setProgress] = useState([]);\n  const [erasing, setErasing] = useState(false);\n  const [certificate, setCertificate] = useState(null);\n  const [checklist, setChecklist] = useState({\n    adb: false,\n    connected: false,\n    encrypted: false\n  });\n  const [androidEncryption, setAndroidEncryption] = useState(null);\n  const [winBitLocker, setWinBitLocker] = useState({\n    status: null,\n    unlocking: false\n  });\n  const wsRef = useRef(null);\n\n  // WebSocket cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (wsRef.current) wsRef.current.close();\n    };\n  }, []);\n  const startErase = async () => {\n    setErasing(true);\n    setProgress([`Started erasing ${selectedDevice} with ${method}`]);\n    wsRef.current = new window.WebSocket(`ws://localhost:8000/logs/${encodeURIComponent(selectedDevice)}`);\n    wsRef.current.onmessage = event => {\n      setProgress(p => [...p, event.data]);\n      if (event.data.includes('Certificate generated.')) {\n        wsRef.current.close();\n        setErasing(false);\n        fetchCertificate();\n      }\n    };\n    wsRef.current.onerror = () => {\n      setProgress(p => [...p, 'WebSocket error.']);\n    };\n    try {\n      await axios.post('http://localhost:8000/erase', {\n        device_id: selectedDevice,\n        method\n      });\n    } catch (e) {\n      setProgress(p => {\n        var _e$response, _e$response$data;\n        return [...p, 'Erase failed: ' + (((_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.detail) || e.message)];\n      });\n      setErasing(false);\n      if (wsRef.current) wsRef.current.close();\n    }\n  };\n  const fetchCertificate = async () => {\n    try {\n      const res = await axios.get('http://localhost:8000/certificate', {\n        params: {\n          device_id: selectedDevice,\n          format: 'json'\n        }\n      });\n      setCertificate(res.data);\n    } catch (e) {\n      setProgress(p => {\n        var _e$response2, _e$response2$data;\n        return [...p, 'Failed to fetch certificate: ' + (((_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : (_e$response2$data = _e$response2.data) === null || _e$response2$data === void 0 ? void 0 : _e$response2$data.detail) || e.message)];\n      });\n    }\n  };\n  const downloadCert = format => {\n    const url = `http://localhost:8000/certificate?device_id=${encodeURIComponent(selectedDevice)}&format=${format}`;\n    window.open(url, '_blank');\n  };\n\n  // Checklist for Android devices\n  const isAndroid = devices.find(d => d.id === selectedDevice && d.type.startsWith('Android'));\n  const isWindowsDrive = devices.find(d => d.id === selectedDevice && (d.type === 'SSD' || d.type === 'HDD'));\n\n  // Auto-detect Android encryption status (via backend API)\n  useEffect(() => {\n    if (isAndroid) {\n      const serial = selectedDevice.split(':')[1];\n      fetch(`http://localhost:8000/android_encryption?serial=${serial}`).then(res => {\n        if (!res.ok) throw new Error('Failed to detect encryption');\n        return res.json();\n      }).then(data => setAndroidEncryption(data.encrypted ? 'Encrypted' : 'Not Encrypted')).catch(() => setAndroidEncryption('Unknown'));\n    } else {\n      setAndroidEncryption(null);\n    }\n  }, [selectedDevice, isAndroid]);\n\n  // Auto-detect Windows BitLocker status (via backend API)\n  useEffect(() => {\n    if (isWindowsDrive) {\n      fetch(`http://localhost:8000/bitlocker_status?device_id=${encodeURIComponent(selectedDevice)}`).then(res => {\n        if (!res.ok) throw new Error('Failed to detect BitLocker status');\n        return res.json();\n      }).then(data => {\n        if (data.results && data.results.length > 0) {\n          setWinBitLocker({\n            status: data.results.map(r => `${r.drive}: ${r.status}`).join(', '),\n            unlocking: false,\n            details: data.results\n          });\n        } else {\n          setWinBitLocker({\n            status: 'Unknown',\n            unlocking: false,\n            details: []\n          });\n        }\n      }).catch(() => setWinBitLocker({\n        status: 'Error',\n        unlocking: false,\n        details: []\n      }));\n    } else {\n      setWinBitLocker({\n        status: null,\n        unlocking: false,\n        details: []\n      });\n    }\n  }, [selectedDevice, isWindowsDrive]);\n  if (!consent) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 40\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"This process will permanently erase selected drives. Proceed?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setConsent(true);\n          fetchDevices();\n        },\n        children: \"I Understand, Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this);\n  }\n  if (certificate) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 40\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Erase Complete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(certificate, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => downloadCert('pdf'),\n        children: \"Download PDF Certificate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => downloadCert('json'),\n        children: \"Download JSON Certificate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        children: \"Start Over\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 40\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Select Device to Erase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedDevice,\n      onChange: e => setSelectedDevice(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"-- Select --\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), devices.map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: d.id,\n        children: [d.model, \" [\", d.type, \"] (\", d.size, \")\", d.serial ? ` [Serial: ${d.serial}]` : '']\n      }, d.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), isAndroid && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '20px 0',\n        padding: '10px',\n        border: '1px solid #ccc',\n        borderRadius: 8,\n        background: '#f9f9f9'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Android Device Checklist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: checklist.adb,\n          onChange: e => setChecklist(c => ({\n            ...c,\n            adb: e.target.checked\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), \"Enable USB Debugging (ADB) on device\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: checklist.connected,\n          onChange: e => setChecklist(c => ({\n            ...c,\n            connected: e.target.checked\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), \"Device is connected and authorized (shows in 'adb devices')\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: checklist.encrypted,\n          onChange: e => setChecklist(c => ({\n            ...c,\n            encrypted: e.target.checked\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this), \"Device storage is encrypted (recommended for secure erase)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: '#888',\n          fontSize: 13,\n          marginTop: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Note:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), \" Factory reset is only non-recoverable if device is encrypted.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 87\n        }, this), \"Encryption status: \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: androidEncryption === null ? 'Detecting...' : androidEncryption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 104\n        }, this), \"You can check encryption status in device settings.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 64\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this), isWindowsDrive && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '20px 0',\n        padding: '10px',\n        border: '1px solid #ccc',\n        borderRadius: 8,\n        background: '#f9f9f9'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Windows Drive Checklist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"BitLocker status: \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: winBitLocker.status === null ? 'Detecting...' : winBitLocker.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 31\n        }, this), winBitLocker.details && winBitLocker.details.map(r => r.status === 'Locked' ? /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            marginLeft: 10\n          },\n          disabled: winBitLocker.unlocking,\n          onClick: () => setUnlockModal({\n            open: true,\n            drive: r.drive,\n            method: 'password',\n            value: ''\n          }),\n          children: [\"Unlock BitLocker (\", r.drive, \")\"]\n        }, r.drive, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 17\n        }, this) : null), unlockModal.open && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            width: '100vw',\n            height: '100vh',\n            background: 'rgba(0,0,0,0.4)',\n            zIndex: 9999\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              background: '#fff',\n              padding: 30,\n              borderRadius: 8,\n              maxWidth: 400,\n              margin: '100px auto',\n              boxShadow: '0 2px 8px #0003'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Unlock BitLocker (\", unlockModal.drive, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Unlock method:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: unlockModal.method,\n              onChange: e => setUnlockModal(m => ({\n                ...m,\n                method: e.target.value,\n                value: ''\n              })),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"password\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"recovery_key\",\n                children: \"Recovery Key\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"numerical_password\",\n                children: \"Numerical Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"key_file\",\n                children: \"Key File (.BEK)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [unlockModal.method === 'key_file' ? 'Key File Path:' : 'Value:', /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: unlockModal.value,\n                onChange: e => setUnlockModal(m => ({\n                  ...m,\n                  value: e.target.value\n                })),\n                style: {\n                  width: '100%',\n                  marginTop: 8\n                },\n                placeholder: unlockModal.method === 'key_file' ? 'C:\\path\\to\\keyfile.BEK' : 'Enter value'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              disabled: winBitLocker.unlocking,\n              onClick: async () => {\n                // Input sanitization\n                if (!unlockModal.value || unlockModal.value.length < 3) {\n                  alert('Please enter a valid value.');\n                  return;\n                }\n                setWinBitLocker(w => ({\n                  ...w,\n                  unlocking: true\n                }));\n                const body = {\n                  device_id: unlockModal.drive\n                };\n                body[unlockModal.method] = unlockModal.value;\n                try {\n                  const res = await fetch('http://localhost:8000/bitlocker_unlock', {\n                    method: 'POST',\n                    headers: {\n                      'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify(body)\n                  });\n                  const data = await res.json();\n                  if (res.ok && data.status === 'Unlocked') {\n                    setWinBitLocker(w => ({\n                      ...w,\n                      status: w.status.replace(`${unlockModal.drive}: Locked`, `${unlockModal.drive}: Unlocked`),\n                      unlocking: false\n                    }));\n                  } else {\n                    alert('Unlock failed: ' + (data.error || data.output || 'Unknown error'));\n                    setWinBitLocker(w => ({\n                      ...w,\n                      unlocking: false\n                    }));\n                  }\n                } catch (e) {\n                  alert('Unlock failed: ' + e.message);\n                  setWinBitLocker(w => ({\n                    ...w,\n                    unlocking: false\n                  }));\n                }\n                setUnlockModal({\n                  open: false,\n                  drive: '',\n                  method: 'password',\n                  value: ''\n                });\n              },\n              children: winBitLocker.unlocking ? 'Unlocking...' : 'Unlock'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                marginLeft: 10\n              },\n              onClick: () => setUnlockModal({\n                open: false,\n                drive: '',\n                method: 'password',\n                value: ''\n              }),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: '#888',\n          fontSize: 13,\n          marginTop: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Note:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this), \" Secure erase is only possible if BitLocker is unlocked.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 81\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Erase Method\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: method,\n      onChange: e => setMethod(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"auto\",\n        children: \"Auto Secure Erase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"multi-pass\",\n        children: \"Multi-pass overwrite\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"crypto-erase\",\n        children: \"Crypto-erase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: !selectedDevice || erasing || isAndroid && !(checklist.adb && checklist.connected && checklist.encrypted),\n      onClick: startErase,\n      children: erasing ? 'Erasing...' : 'Erase'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 30\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: progress.join('\\n')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), \"// ...existing code...\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+iVkGaLGVfFcX3rM1J3AOfeoMfs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","jsxDEV","_jsxDEV","App","_s","unlockModal","setUnlockModal","open","drive","method","value","consent","setConsent","devices","setDevices","selectedDevice","setSelectedDevice","setMethod","progress","setProgress","erasing","setErasing","certificate","setCertificate","checklist","setChecklist","adb","connected","encrypted","androidEncryption","setAndroidEncryption","winBitLocker","setWinBitLocker","status","unlocking","wsRef","current","close","startErase","window","WebSocket","encodeURIComponent","onmessage","event","p","data","includes","fetchCertificate","onerror","post","device_id","e","_e$response","_e$response$data","response","detail","message","res","get","params","format","_e$response2","_e$response2$data","downloadCert","url","isAndroid","find","d","id","type","startsWith","isWindowsDrive","serial","split","fetch","then","ok","Error","json","catch","results","length","map","r","join","details","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","fetchDevices","JSON","stringify","location","reload","onChange","target","model","size","margin","border","borderRadius","background","checked","c","color","fontSize","marginTop","marginLeft","disabled","position","top","left","width","height","zIndex","maxWidth","boxShadow","m","placeholder","alert","w","body","headers","replace","error","output","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/OneDrive/Desktop/sih 2025/secure-wipe-frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction App() {\r\n    const [unlockModal, setUnlockModal] = useState({ open: false, drive: '', method: 'password', value: '' });\r\n    const [consent, setConsent] = useState(false);\r\n    const [devices, setDevices] = useState([]);\r\n    const [selectedDevice, setSelectedDevice] = useState('');\r\n    const [method, setMethod] = useState('auto');\r\n    const [progress, setProgress] = useState([]);\r\n    const [erasing, setErasing] = useState(false);\r\n    const [certificate, setCertificate] = useState(null);\r\n    const [checklist, setChecklist] = useState({ adb: false, connected: false, encrypted: false });\r\n    const [androidEncryption, setAndroidEncryption] = useState(null);\r\n    const [winBitLocker, setWinBitLocker] = useState({ status: null, unlocking: false });\r\n    const wsRef = useRef(null);\r\n\r\n    // WebSocket cleanup on unmount\r\n    useEffect(() => {\r\n      return () => {\r\n        if (wsRef.current) wsRef.current.close();\r\n      };\r\n    }, []);\r\n  const startErase = async () => {\r\n    setErasing(true);\r\n    setProgress([`Started erasing ${selectedDevice} with ${method}`]);\r\n    wsRef.current = new window.WebSocket(`ws://localhost:8000/logs/${encodeURIComponent(selectedDevice)}`);\r\n    wsRef.current.onmessage = (event) => {\r\n      setProgress((p) => [...p, event.data]);\r\n      if (event.data.includes('Certificate generated.')) {\r\n        wsRef.current.close();\r\n        setErasing(false);\r\n        fetchCertificate();\r\n      }\r\n    };\r\n    wsRef.current.onerror = () => {\r\n      setProgress((p) => [...p, 'WebSocket error.']);\r\n    };\r\n    try {\r\n      await axios.post('http://localhost:8000/erase', {\r\n        device_id: selectedDevice,\r\n        method,\r\n      });\r\n    } catch (e) {\r\n      setProgress((p) => [...p, 'Erase failed: ' + (e.response?.data?.detail || e.message)]);\r\n      setErasing(false);\r\n      if (wsRef.current) wsRef.current.close();\r\n    }\r\n  };\r\n\r\n  const fetchCertificate = async () => {\r\n    try {\r\n      const res = await axios.get('http://localhost:8000/certificate', {\r\n        params: { device_id: selectedDevice, format: 'json' },\r\n      });\r\n      setCertificate(res.data);\r\n    } catch (e) {\r\n      setProgress((p) => [...p, 'Failed to fetch certificate: ' + (e.response?.data?.detail || e.message)]);\r\n    }\r\n  };\r\n\r\n  const downloadCert = (format) => {\r\n    const url = `http://localhost:8000/certificate?device_id=${encodeURIComponent(selectedDevice)}&format=${format}`;\r\n    window.open(url, '_blank');\r\n  };\r\n\r\n  // Checklist for Android devices\r\n  const isAndroid = devices.find(d => d.id === selectedDevice && d.type.startsWith('Android'));\r\n  const isWindowsDrive = devices.find(d => d.id === selectedDevice && (d.type === 'SSD' || d.type === 'HDD'));\r\n\r\n  // Auto-detect Android encryption status (via backend API)\r\n  useEffect(() => {\r\n    if (isAndroid) {\r\n      const serial = selectedDevice.split(':')[1];\r\n      fetch(`http://localhost:8000/android_encryption?serial=${serial}`)\r\n        .then(res => {\r\n          if (!res.ok) throw new Error('Failed to detect encryption');\r\n          return res.json();\r\n        })\r\n        .then(data => setAndroidEncryption(data.encrypted ? 'Encrypted' : 'Not Encrypted'))\r\n        .catch(() => setAndroidEncryption('Unknown'));\r\n    } else {\r\n      setAndroidEncryption(null);\r\n    }\r\n  }, [selectedDevice, isAndroid]);\r\n\r\n  // Auto-detect Windows BitLocker status (via backend API)\r\n  useEffect(() => {\r\n    if (isWindowsDrive) {\r\n      fetch(`http://localhost:8000/bitlocker_status?device_id=${encodeURIComponent(selectedDevice)}`)\r\n        .then(res => {\r\n          if (!res.ok) throw new Error('Failed to detect BitLocker status');\r\n          return res.json();\r\n        })\r\n        .then(data => {\r\n          if (data.results && data.results.length > 0) {\r\n            setWinBitLocker({\r\n              status: data.results.map(r => `${r.drive}: ${r.status}`).join(', '),\r\n              unlocking: false,\r\n              details: data.results\r\n            });\r\n          } else {\r\n            setWinBitLocker({ status: 'Unknown', unlocking: false, details: [] });\r\n          }\r\n        })\r\n        .catch(() => setWinBitLocker({ status: 'Error', unlocking: false, details: [] }));\r\n    } else {\r\n      setWinBitLocker({ status: null, unlocking: false, details: [] });\r\n    }\r\n  }, [selectedDevice, isWindowsDrive]);\r\n\r\n  if (!consent) {\r\n    return (\r\n      <div style={{ padding: 40 }}>\r\n        <h2>This process will permanently erase selected drives. Proceed?</h2>\r\n        <button onClick={() => { setConsent(true); fetchDevices(); }}>I Understand, Continue</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (certificate) {\r\n    return (\r\n      <div style={{ padding: 40 }}>\r\n        <h2>Erase Complete</h2>\r\n        <pre>{JSON.stringify(certificate, null, 2)}</pre>\r\n        <button onClick={() => downloadCert('pdf')}>Download PDF Certificate</button>\r\n        <button onClick={() => downloadCert('json')}>Download JSON Certificate</button>\r\n        <br />\r\n        <button onClick={() => window.location.reload()}>Start Over</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{ padding: 40 }}>\r\n      <h2>Select Device to Erase</h2>\r\n      <select value={selectedDevice} onChange={e => setSelectedDevice(e.target.value)}>\r\n        <option value=\"\">-- Select --</option>\r\n        {devices.map(d => (\r\n          <option key={d.id} value={d.id}>\r\n            {d.model} [{d.type}] ({d.size}){d.serial ? ` [Serial: ${d.serial}]` : ''}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      {isAndroid && (\r\n        <div style={{ margin: '20px 0', padding: '10px', border: '1px solid #ccc', borderRadius: 8, background: '#f9f9f9' }}>\r\n          <h3>Android Device Checklist</h3>\r\n          <label>\r\n            <input type=\"checkbox\" checked={checklist.adb} onChange={e => setChecklist(c => ({ ...c, adb: e.target.checked }))} />\r\n            Enable USB Debugging (ADB) on device\r\n          </label><br />\r\n          <label>\r\n            <input type=\"checkbox\" checked={checklist.connected} onChange={e => setChecklist(c => ({ ...c, connected: e.target.checked }))} />\r\n            Device is connected and authorized (shows in 'adb devices')\r\n          </label><br />\r\n          <label>\r\n            <input type=\"checkbox\" checked={checklist.encrypted} onChange={e => setChecklist(c => ({ ...c, encrypted: e.target.checked }))} />\r\n            Device storage is encrypted (recommended for secure erase)\r\n          </label>\r\n          <div style={{ color: '#888', fontSize: 13, marginTop: 8 }}>\r\n            <b>Note:</b> Factory reset is only non-recoverable if device is encrypted.<br />\r\n            Encryption status: <b>{androidEncryption === null ? 'Detecting...' : androidEncryption}</b><br />\r\n            You can check encryption status in device settings.<br />\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {isWindowsDrive && (\r\n        <div style={{ margin: '20px 0', padding: '10px', border: '1px solid #ccc', borderRadius: 8, background: '#f9f9f9' }}>\r\n          <h3>Windows Drive Checklist</h3>\r\n          <div>\r\n            BitLocker status: <b>{winBitLocker.status === null ? 'Detecting...' : winBitLocker.status}</b>\r\n            {/* Show unlock button for each locked drive */}\r\n            {winBitLocker.details && winBitLocker.details.map(r => (\r\n              r.status === 'Locked' ? (\r\n                <button\r\n                  key={r.drive}\r\n                  style={{ marginLeft: 10 }}\r\n                  disabled={winBitLocker.unlocking}\r\n                  onClick={() => setUnlockModal({ open: true, drive: r.drive, method: 'password', value: '' })}\r\n                >Unlock BitLocker ({r.drive})</button>\r\n              ) : null\r\n            ))}\r\n  {/* BitLocker Unlock Modal */}\r\n  {unlockModal.open && (\r\n    <div style={{ position: 'fixed', top: 0, left: 0, width: '100vw', height: '100vh', background: 'rgba(0,0,0,0.4)', zIndex: 9999 }}>\r\n      <div style={{ background: '#fff', padding: 30, borderRadius: 8, maxWidth: 400, margin: '100px auto', boxShadow: '0 2px 8px #0003' }}>\r\n        <h3>Unlock BitLocker ({unlockModal.drive})</h3>\r\n        <label>Unlock method:</label>\r\n        <select value={unlockModal.method} onChange={e => setUnlockModal(m => ({ ...m, method: e.target.value, value: '' }))}>\r\n          <option value=\"password\">Password</option>\r\n          <option value=\"recovery_key\">Recovery Key</option>\r\n          <option value=\"numerical_password\">Numerical Password</option>\r\n          <option value=\"key_file\">Key File (.BEK)</option>\r\n        </select>\r\n        <br /><br />\r\n        <label>\r\n          {unlockModal.method === 'key_file' ? 'Key File Path:' : 'Value:'}\r\n          <input\r\n            type=\"text\"\r\n            value={unlockModal.value}\r\n            onChange={e => setUnlockModal(m => ({ ...m, value: e.target.value }))}\r\n            style={{ width: '100%', marginTop: 8 }}\r\n            placeholder={unlockModal.method === 'key_file' ? 'C:\\path\\to\\keyfile.BEK' : 'Enter value'}\r\n          />\r\n        </label>\r\n        <br /><br />\r\n        <button\r\n          disabled={winBitLocker.unlocking}\r\n          onClick={async () => {\r\n            // Input sanitization\r\n            if (!unlockModal.value || unlockModal.value.length < 3) {\r\n              alert('Please enter a valid value.');\r\n              return;\r\n            }\r\n            setWinBitLocker(w => ({ ...w, unlocking: true }));\r\n            const body = { device_id: unlockModal.drive };\r\n            body[unlockModal.method] = unlockModal.value;\r\n            try {\r\n              const res = await fetch('http://localhost:8000/bitlocker_unlock', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(body)\r\n              });\r\n              const data = await res.json();\r\n              if (res.ok && data.status === 'Unlocked') {\r\n                setWinBitLocker(w => ({ ...w, status: w.status.replace(`${unlockModal.drive}: Locked`, `${unlockModal.drive}: Unlocked`), unlocking: false }));\r\n              } else {\r\n                alert('Unlock failed: ' + (data.error || data.output || 'Unknown error'));\r\n                setWinBitLocker(w => ({ ...w, unlocking: false }));\r\n              }\r\n            } catch (e) {\r\n              alert('Unlock failed: ' + e.message);\r\n              setWinBitLocker(w => ({ ...w, unlocking: false }));\r\n            }\r\n            setUnlockModal({ open: false, drive: '', method: 'password', value: '' });\r\n          }}\r\n        >{winBitLocker.unlocking ? 'Unlocking...' : 'Unlock'}</button>\r\n        <button style={{ marginLeft: 10 }} onClick={() => setUnlockModal({ open: false, drive: '', method: 'password', value: '' })}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  )}\r\n          </div>\r\n          <div style={{ color: '#888', fontSize: 13, marginTop: 8 }}>\r\n            <b>Note:</b> Secure erase is only possible if BitLocker is unlocked.<br />\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <h3>Erase Method</h3>\r\n      <select value={method} onChange={e => setMethod(e.target.value)}>\r\n        <option value=\"auto\">Auto Secure Erase</option>\r\n        <option value=\"multi-pass\">Multi-pass overwrite</option>\r\n        <option value=\"crypto-erase\">Crypto-erase</option>\r\n      </select>\r\n      <br /><br />\r\n      <button\r\n        disabled={!selectedDevice || erasing || (isAndroid && !(checklist.adb && checklist.connected && checklist.encrypted))}\r\n        onClick={startErase}\r\n      >{erasing ? 'Erasing...' : 'Erase'}</button>\r\n      <div style={{ marginTop: 30 }}>\r\n        <h4>Progress</h4>\r\n        <pre>{progress.join('\\n')}</pre>\r\n      </div>\r\n\r\n  // ...existing code...\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}