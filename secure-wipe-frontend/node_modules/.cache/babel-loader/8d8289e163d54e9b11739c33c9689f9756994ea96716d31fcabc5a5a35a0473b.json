{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\Desktop\\\\sih 2025\\\\secure-wipe-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [unlockModal, setUnlockModal] = useState({\n    open: false,\n    drive: '',\n    method: 'password',\n    value: ''\n  });\n  const [consent, setConsent] = useState(false);\n  const [devices, setDevices] = useState([]);\n  const [selectedDevice, setSelectedDevice] = useState('');\n  const [method, setMethod] = useState('auto');\n  const [progress, setProgress] = useState([]);\n  const [erasing, setErasing] = useState(false);\n  const [certificate, setCertificate] = useState(null);\n  const [checklist, setChecklist] = useState({\n    adb: false,\n    connected: false,\n    encrypted: false\n  });\n  const [androidEncryption, setAndroidEncryption] = useState(null);\n  const [winBitLocker, setWinBitLocker] = useState({\n    status: null,\n    unlocking: false\n  });\n  const wsRef = useRef(null);\n  const fetchDevices = async () => {\n    const res = await axios.get('http://localhost:8000/devices');\n    setDevices(res.data);\n  };\n  const startErase = async () => {\n    setErasing(true);\n    setProgress([`Started erasing ${selectedDevice} with ${method}`]);\n    // Start WebSocket for logs\n    wsRef.current = new window.WebSocket(`ws://localhost:8000/logs/${encodeURIComponent(selectedDevice)}`);\n    wsRef.current.onmessage = event => {\n      setProgress(p => [...p, event.data]);\n      if (event.data.includes('Certificate generated.')) {\n        wsRef.current.close();\n        setErasing(false);\n        fetchCertificate();\n      }\n    };\n    wsRef.current.onerror = () => {\n      setProgress(p => [...p, 'WebSocket error.']);\n    };\n    await axios.post('http://localhost:8000/erase', {\n      device_id: selectedDevice,\n      method\n    });\n  };\n  const fetchCertificate = async () => {\n    // Fetch JSON for display\n    const res = await axios.get('http://localhost:8000/certificate', {\n      params: {\n        device_id: selectedDevice,\n        format: 'json'\n      }\n    });\n    setCertificate(res.data);\n  };\n  const downloadCert = format => {\n    const url = `http://localhost:8000/certificate?device_id=${encodeURIComponent(selectedDevice)}&format=${format}`;\n    window.open(url, '_blank');\n  };\n\n  // Checklist for Android devices\n  const isAndroid = devices.find(d => d.id === selectedDevice && d.type.startsWith('Android'));\n  const isWindowsDrive = devices.find(d => d.id === selectedDevice && (d.type === 'SSD' || d.type === 'HDD'));\n\n  // Verification state (move to top level)\n  const [verification, setVerification] = useState(null);\n\n  // Auto-detect Android encryption status (via backend API)\n  useEffect(() => {\n    if (isAndroid) {\n      const serial = selectedDevice.split(':')[1];\n      fetch(`http://localhost:8000/android_encryption?serial=${serial}`).then(res => res.json()).then(data => setAndroidEncryption(data.encrypted ? 'Encrypted' : 'Not Encrypted')).catch(() => setAndroidEncryption(null));\n    } else {\n      setAndroidEncryption(null);\n    }\n  }, [selectedDevice, isAndroid]);\n\n  // Auto-detect Windows BitLocker status (via backend API)\n  useEffect(() => {\n    if (isWindowsDrive) {\n      fetch(`http://localhost:8000/bitlocker_status?device_id=${encodeURIComponent(selectedDevice)}`).then(res => res.json()).then(data => {\n        // Handle new array format from backend\n        if (data.results && data.results.length > 0) {\n          // Show status for all mapped drive letters\n          setWinBitLocker({\n            status: data.results.map(r => `${r.drive}: ${r.status}`).join(', '),\n            unlocking: false,\n            details: data.results\n          });\n        } else {\n          setWinBitLocker({\n            status: 'Unknown',\n            unlocking: false,\n            details: []\n          });\n        }\n      }).catch(() => setWinBitLocker({\n        status: null,\n        unlocking: false,\n        details: []\n      }));\n    } else {\n      setWinBitLocker({\n        status: null,\n        unlocking: false,\n        details: []\n      });\n    }\n  }, [selectedDevice, isWindowsDrive]);\n  if (!consent) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 40\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"This process will permanently erase selected drives. Proceed?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setConsent(true);\n          fetchDevices();\n        },\n        children: \"I Understand, Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this);\n  }\n  const verifyErasure = async () => {\n    setVerification('Loading...');\n    try {\n      const res = await axios.get('http://localhost:8000/verify_erasure', {\n        params: {\n          device_id: selectedDevice\n        }\n      });\n      setVerification(res.data);\n    } catch (e) {\n      setVerification('Verification failed.');\n    }\n  };\n  if (certificate) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 40\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Erase Complete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(certificate, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => downloadCert('pdf'),\n        children: \"Download PDF Certificate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => downloadCert('json'),\n        children: \"Download JSON Certificate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: verifyErasure,\n        children: \"Verify Erasure (AI/Statistical)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), verification && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 20,\n          padding: 15,\n          background: '#f3f3f3',\n          borderRadius: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Verification Report\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: typeof verification === 'string' ? verification : JSON.stringify(verification, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        children: \"Start Over\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 40\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Select Device to Erase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedDevice,\n      onChange: e => setSelectedDevice(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"-- Select --\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), devices.map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: d.id,\n        children: [d.model, \" [\", d.type, \"] (\", d.size, \")\"]\n      }, d.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), isAndroid && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '20px 0',\n        padding: '10px',\n        border: '1px solid #ccc',\n        borderRadius: 8,\n        background: '#f9f9f9'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Android Device Checklist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: checklist.adb,\n          onChange: e => setChecklist(c => ({\n            ...c,\n            adb: e.target.checked\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), \"Enable USB Debugging (ADB) on device\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: checklist.connected,\n          onChange: e => setChecklist(c => ({\n            ...c,\n            connected: e.target.checked\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), \"Device is connected and authorized (shows in 'adb devices')\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: checklist.encrypted,\n          onChange: e => setChecklist(c => ({\n            ...c,\n            encrypted: e.target.checked\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), \"Device storage is encrypted (recommended for secure erase)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: '#888',\n          fontSize: 13,\n          marginTop: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Note:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), \" Factory reset is only non-recoverable if device is encrypted.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 87\n        }, this), \"Encryption status: \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: androidEncryption === null ? 'Detecting...' : androidEncryption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 104\n        }, this), \"You can check encryption status in device settings.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 64\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }, this), isWindowsDrive && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '20px 0',\n        padding: '10px',\n        border: '1px solid #ccc',\n        borderRadius: 8,\n        background: '#f9f9f9'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Windows Drive Checklist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"BitLocker status: \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: winBitLocker.status === null ? 'Detecting...' : winBitLocker.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 31\n        }, this), winBitLocker.details && winBitLocker.details.map(r => r.status === 'Locked' ? /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            marginLeft: 10\n          },\n          disabled: winBitLocker.unlocking,\n          onClick: () => setUnlockModal({\n            open: true,\n            drive: r.drive,\n            method: 'password',\n            value: ''\n          }),\n          children: [\"Unlock BitLocker (\", r.drive, \")\"]\n        }, r.drive, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 17\n        }, this) : null), unlockModal.open && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            width: '100vw',\n            height: '100vh',\n            background: 'rgba(0,0,0,0.4)',\n            zIndex: 9999\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              background: '#fff',\n              padding: 30,\n              borderRadius: 8,\n              maxWidth: 400,\n              margin: '100px auto',\n              boxShadow: '0 2px 8px #0003'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Unlock BitLocker (\", unlockModal.drive, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Unlock method:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: unlockModal.method,\n              onChange: e => setUnlockModal(m => ({\n                ...m,\n                method: e.target.value,\n                value: ''\n              })),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"password\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"recovery_key\",\n                children: \"Recovery Key\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"numerical_password\",\n                children: \"Numerical Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"key_file\",\n                children: \"Key File (.BEK)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [unlockModal.method === 'key_file' ? 'Key File Path:' : 'Value:', /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: unlockModal.value,\n                onChange: e => setUnlockModal(m => ({\n                  ...m,\n                  value: e.target.value\n                })),\n                style: {\n                  width: '100%',\n                  marginTop: 8\n                },\n                placeholder: unlockModal.method === 'key_file' ? 'C:\\path\\to\\keyfile.BEK' : 'Enter value'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: async () => {\n                const body = {\n                  device_id: unlockModal.drive,\n                  password: null,\n                  recovery_key: null,\n                  numerical_password: null,\n                  key_file: null\n                };\n                body[unlockModal.method] = unlockModal.value;\n                try {\n                  const res = await fetch('http://localhost:8000/bitlocker_unlock', {\n                    method: 'POST',\n                    headers: {\n                      'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify(body)\n                  });\n                  const data = await res.json();\n                  if (data.status === 'Unlocked') {\n                    setWinBitLocker(w => ({\n                      ...w,\n                      status: w.status.replace(`${unlockModal.drive}: Locked`, `${unlockModal.drive}: Unlocked`)\n                    }));\n                  } else {\n                    alert('Unlock failed: ' + (data.error || data.output || 'Unknown error'));\n                  }\n                } catch (e) {\n                  alert('Unlock failed: ' + e.message);\n                }\n                setUnlockModal({\n                  open: false,\n                  drive: '',\n                  method: 'password',\n                  value: ''\n                });\n              },\n              children: \"Unlock\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                marginLeft: 10\n              },\n              onClick: () => setUnlockModal({\n                open: false,\n                drive: '',\n                method: 'password',\n                value: ''\n              }),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: '#888',\n          fontSize: 13,\n          marginTop: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Note:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this), \" Secure erase is only possible if BitLocker is unlocked.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 81\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Erase Method\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: method,\n      onChange: e => setMethod(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"auto\",\n        children: \"Auto Secure Erase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"multi-pass\",\n        children: \"Multi-pass overwrite\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"crypto-erase\",\n        children: \"Crypto-erase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: !selectedDevice || erasing || isAndroid && !(checklist.adb && checklist.connected && checklist.encrypted),\n      onClick: startErase,\n      children: \"Erase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 30\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: progress.join('\\n')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7bgB01oSS7DFicfnnT+oA+yt45Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","jsxDEV","_jsxDEV","App","_s","unlockModal","setUnlockModal","open","drive","method","value","consent","setConsent","devices","setDevices","selectedDevice","setSelectedDevice","setMethod","progress","setProgress","erasing","setErasing","certificate","setCertificate","checklist","setChecklist","adb","connected","encrypted","androidEncryption","setAndroidEncryption","winBitLocker","setWinBitLocker","status","unlocking","wsRef","fetchDevices","res","get","data","startErase","current","window","WebSocket","encodeURIComponent","onmessage","event","p","includes","close","fetchCertificate","onerror","post","device_id","params","format","downloadCert","url","isAndroid","find","d","id","type","startsWith","isWindowsDrive","verification","setVerification","serial","split","fetch","then","json","catch","results","length","map","r","join","details","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","verifyErasure","e","JSON","stringify","marginTop","background","borderRadius","location","reload","onChange","target","model","size","margin","border","checked","c","color","fontSize","marginLeft","disabled","position","top","left","width","height","zIndex","maxWidth","boxShadow","m","placeholder","body","password","recovery_key","numerical_password","key_file","headers","w","replace","alert","error","output","message","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/OneDrive/Desktop/sih 2025/secure-wipe-frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction App() {\r\n  const [unlockModal, setUnlockModal] = useState({ open: false, drive: '', method: 'password', value: '' });\r\n  const [consent, setConsent] = useState(false);\r\n  const [devices, setDevices] = useState([]);\r\n  const [selectedDevice, setSelectedDevice] = useState('');\r\n  const [method, setMethod] = useState('auto');\r\n  const [progress, setProgress] = useState([]);\r\n  const [erasing, setErasing] = useState(false);\r\n  const [certificate, setCertificate] = useState(null);\r\n  const [checklist, setChecklist] = useState({ adb: false, connected: false, encrypted: false });\r\n  const [androidEncryption, setAndroidEncryption] = useState(null);\r\n  const [winBitLocker, setWinBitLocker] = useState({ status: null, unlocking: false });\r\n  const wsRef = useRef(null);\r\n\r\n  const fetchDevices = async () => {\r\n    const res = await axios.get('http://localhost:8000/devices');\r\n    setDevices(res.data);\r\n  };\r\n\r\n  const startErase = async () => {\r\n    setErasing(true);\r\n    setProgress([`Started erasing ${selectedDevice} with ${method}`]);\r\n    // Start WebSocket for logs\r\n    wsRef.current = new window.WebSocket(`ws://localhost:8000/logs/${encodeURIComponent(selectedDevice)}`);\r\n    wsRef.current.onmessage = (event) => {\r\n      setProgress((p) => [...p, event.data]);\r\n      if (event.data.includes('Certificate generated.')) {\r\n        wsRef.current.close();\r\n        setErasing(false);\r\n        fetchCertificate();\r\n      }\r\n    };\r\n    wsRef.current.onerror = () => {\r\n      setProgress((p) => [...p, 'WebSocket error.']);\r\n    };\r\n    await axios.post('http://localhost:8000/erase', {\r\n      device_id: selectedDevice,\r\n      method,\r\n    });\r\n  };\r\n\r\n  const fetchCertificate = async () => {\r\n    // Fetch JSON for display\r\n    const res = await axios.get('http://localhost:8000/certificate', {\r\n      params: { device_id: selectedDevice, format: 'json' },\r\n    });\r\n    setCertificate(res.data);\r\n  };\r\n\r\n  const downloadCert = (format) => {\r\n    const url = `http://localhost:8000/certificate?device_id=${encodeURIComponent(selectedDevice)}&format=${format}`;\r\n    window.open(url, '_blank');\r\n  };\r\n\r\n\r\n  // Checklist for Android devices\r\n  const isAndroid = devices.find(d => d.id === selectedDevice && d.type.startsWith('Android'));\r\n  const isWindowsDrive = devices.find(d => d.id === selectedDevice && (d.type === 'SSD' || d.type === 'HDD'));\r\n\r\n  // Verification state (move to top level)\r\n  const [verification, setVerification] = useState(null);\r\n\r\n  // Auto-detect Android encryption status (via backend API)\r\n  useEffect(() => {\r\n    if (isAndroid) {\r\n      const serial = selectedDevice.split(':')[1];\r\n      fetch(`http://localhost:8000/android_encryption?serial=${serial}`)\r\n        .then(res => res.json())\r\n        .then(data => setAndroidEncryption(data.encrypted ? 'Encrypted' : 'Not Encrypted'))\r\n        .catch(() => setAndroidEncryption(null));\r\n    } else {\r\n      setAndroidEncryption(null);\r\n    }\r\n  }, [selectedDevice, isAndroid]);\r\n\r\n  // Auto-detect Windows BitLocker status (via backend API)\r\n  useEffect(() => {\r\n    if (isWindowsDrive) {\r\n      fetch(`http://localhost:8000/bitlocker_status?device_id=${encodeURIComponent(selectedDevice)}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          // Handle new array format from backend\r\n          if (data.results && data.results.length > 0) {\r\n            // Show status for all mapped drive letters\r\n            setWinBitLocker({\r\n              status: data.results.map(r => `${r.drive}: ${r.status}`).join(', '),\r\n              unlocking: false,\r\n              details: data.results\r\n            });\r\n          } else {\r\n            setWinBitLocker({ status: 'Unknown', unlocking: false, details: [] });\r\n          }\r\n        })\r\n        .catch(() => setWinBitLocker({ status: null, unlocking: false, details: [] }));\r\n    } else {\r\n      setWinBitLocker({ status: null, unlocking: false, details: [] });\r\n    }\r\n  }, [selectedDevice, isWindowsDrive]);\r\n\r\n  if (!consent) {\r\n    return (\r\n      <div style={{ padding: 40 }}>\r\n        <h2>This process will permanently erase selected drives. Proceed?</h2>\r\n        <button onClick={() => { setConsent(true); fetchDevices(); }}>I Understand, Continue</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\n  const verifyErasure = async () => {\r\n    setVerification('Loading...');\r\n    try {\r\n      const res = await axios.get('http://localhost:8000/verify_erasure', {\r\n        params: { device_id: selectedDevice }\r\n      });\r\n      setVerification(res.data);\r\n    } catch (e) {\r\n      setVerification('Verification failed.');\r\n    }\r\n  };\r\n\r\n  if (certificate) {\r\n    return (\r\n      <div style={{ padding: 40 }}>\r\n        <h2>Erase Complete</h2>\r\n        <pre>{JSON.stringify(certificate, null, 2)}</pre>\r\n        <button onClick={() => downloadCert('pdf')}>Download PDF Certificate</button>\r\n        <button onClick={() => downloadCert('json')}>Download JSON Certificate</button>\r\n        <br />\r\n        <button onClick={verifyErasure}>Verify Erasure (AI/Statistical)</button>\r\n        {verification && (\r\n          <div style={{ marginTop: 20, padding: 15, background: '#f3f3f3', borderRadius: 8 }}>\r\n            <h3>Verification Report</h3>\r\n            <pre>{typeof verification === 'string' ? verification : JSON.stringify(verification, null, 2)}</pre>\r\n          </div>\r\n        )}\r\n        <br />\r\n        <button onClick={() => window.location.reload()}>Start Over</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{ padding: 40 }}>\r\n      <h2>Select Device to Erase</h2>\r\n      <select value={selectedDevice} onChange={e => setSelectedDevice(e.target.value)}>\r\n        <option value=\"\">-- Select --</option>\r\n        {devices.map(d => (\r\n          <option key={d.id} value={d.id}>\r\n            {d.model} [{d.type}] ({d.size})\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      {isAndroid && (\r\n        <div style={{ margin: '20px 0', padding: '10px', border: '1px solid #ccc', borderRadius: 8, background: '#f9f9f9' }}>\r\n          <h3>Android Device Checklist</h3>\r\n          <label>\r\n            <input type=\"checkbox\" checked={checklist.adb} onChange={e => setChecklist(c => ({ ...c, adb: e.target.checked }))} />\r\n            Enable USB Debugging (ADB) on device\r\n          </label><br />\r\n          <label>\r\n            <input type=\"checkbox\" checked={checklist.connected} onChange={e => setChecklist(c => ({ ...c, connected: e.target.checked }))} />\r\n            Device is connected and authorized (shows in 'adb devices')\r\n          </label><br />\r\n          <label>\r\n            <input type=\"checkbox\" checked={checklist.encrypted} onChange={e => setChecklist(c => ({ ...c, encrypted: e.target.checked }))} />\r\n            Device storage is encrypted (recommended for secure erase)\r\n          </label>\r\n          <div style={{ color: '#888', fontSize: 13, marginTop: 8 }}>\r\n            <b>Note:</b> Factory reset is only non-recoverable if device is encrypted.<br />\r\n            Encryption status: <b>{androidEncryption === null ? 'Detecting...' : androidEncryption}</b><br />\r\n            You can check encryption status in device settings.<br />\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {isWindowsDrive && (\r\n        <div style={{ margin: '20px 0', padding: '10px', border: '1px solid #ccc', borderRadius: 8, background: '#f9f9f9' }}>\r\n          <h3>Windows Drive Checklist</h3>\r\n          <div>\r\n            BitLocker status: <b>{winBitLocker.status === null ? 'Detecting...' : winBitLocker.status}</b>\r\n            {/* Show unlock button for each locked drive */}\r\n            {winBitLocker.details && winBitLocker.details.map(r => (\r\n              r.status === 'Locked' ? (\r\n                <button\r\n                  key={r.drive}\r\n                  style={{ marginLeft: 10 }}\r\n                  disabled={winBitLocker.unlocking}\r\n                  onClick={() => setUnlockModal({ open: true, drive: r.drive, method: 'password', value: '' })}\r\n                >Unlock BitLocker ({r.drive})</button>\r\n              ) : null\r\n            ))}\r\n  {/* BitLocker Unlock Modal */}\r\n  {unlockModal.open && (\r\n    <div style={{ position: 'fixed', top: 0, left: 0, width: '100vw', height: '100vh', background: 'rgba(0,0,0,0.4)', zIndex: 9999 }}>\r\n      <div style={{ background: '#fff', padding: 30, borderRadius: 8, maxWidth: 400, margin: '100px auto', boxShadow: '0 2px 8px #0003' }}>\r\n        <h3>Unlock BitLocker ({unlockModal.drive})</h3>\r\n        <label>Unlock method:</label>\r\n        <select value={unlockModal.method} onChange={e => setUnlockModal(m => ({ ...m, method: e.target.value, value: '' }))}>\r\n          <option value=\"password\">Password</option>\r\n          <option value=\"recovery_key\">Recovery Key</option>\r\n          <option value=\"numerical_password\">Numerical Password</option>\r\n          <option value=\"key_file\">Key File (.BEK)</option>\r\n        </select>\r\n        <br /><br />\r\n        <label>\r\n          {unlockModal.method === 'key_file' ? 'Key File Path:' : 'Value:'}\r\n          <input\r\n            type=\"text\"\r\n            value={unlockModal.value}\r\n            onChange={e => setUnlockModal(m => ({ ...m, value: e.target.value }))}\r\n            style={{ width: '100%', marginTop: 8 }}\r\n            placeholder={unlockModal.method === 'key_file' ? 'C:\\path\\to\\keyfile.BEK' : 'Enter value'}\r\n          />\r\n        </label>\r\n        <br /><br />\r\n        <button\r\n          onClick={async () => {\r\n            const body = {\r\n              device_id: unlockModal.drive,\r\n              password: null,\r\n              recovery_key: null,\r\n              numerical_password: null,\r\n              key_file: null\r\n            };\r\n            body[unlockModal.method] = unlockModal.value;\r\n            try {\r\n              const res = await fetch('http://localhost:8000/bitlocker_unlock', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(body)\r\n              });\r\n              const data = await res.json();\r\n              if (data.status === 'Unlocked') {\r\n                setWinBitLocker(w => ({ ...w, status: w.status.replace(`${unlockModal.drive}: Locked`, `${unlockModal.drive}: Unlocked`) }));\r\n              } else {\r\n                alert('Unlock failed: ' + (data.error || data.output || 'Unknown error'));\r\n              }\r\n            } catch (e) {\r\n              alert('Unlock failed: ' + e.message);\r\n            }\r\n            setUnlockModal({ open: false, drive: '', method: 'password', value: '' });\r\n          }}\r\n        >Unlock</button>\r\n        <button style={{ marginLeft: 10 }} onClick={() => setUnlockModal({ open: false, drive: '', method: 'password', value: '' })}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  )}\r\n          </div>\r\n          <div style={{ color: '#888', fontSize: 13, marginTop: 8 }}>\r\n            <b>Note:</b> Secure erase is only possible if BitLocker is unlocked.<br />\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <h3>Erase Method</h3>\r\n      <select value={method} onChange={e => setMethod(e.target.value)}>\r\n        <option value=\"auto\">Auto Secure Erase</option>\r\n        <option value=\"multi-pass\">Multi-pass overwrite</option>\r\n        <option value=\"crypto-erase\">Crypto-erase</option>\r\n      </select>\r\n      <br /><br />\r\n      <button\r\n        disabled={!selectedDevice || erasing || (isAndroid && !(checklist.adb && checklist.connected && checklist.encrypted))}\r\n        onClick={startErase}\r\n      >Erase</button>\r\n      <div style={{ marginTop: 30 }}>\r\n        <h4>Progress</h4>\r\n        <pre>{progress.join('\\n')}</pre>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}